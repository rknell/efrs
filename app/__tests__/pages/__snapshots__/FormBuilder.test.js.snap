// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders at all 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#f3f3f4",
      "flex": 1,
    }
  }
>
  <View>
    <View
      style={
        Object {
          "backgroundColor": "dodgerblue",
          "borderBottomColor": "rgb(106, 182, 255)",
          "borderBottomWidth": 0,
          "elevation": 1,
        }
      }
    >
      <View
        style={
          Object {
            "height": 22,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
            "padding": 10,
          }
        }
      >
        <Text
          ellipsizeMode="tail"
          numberOfLines={1}
          style={
            Object {
              "color": "rgb(255, 255, 255)",
              "flex": 1,
              "fontSize": 20,
              "fontWeight": "300",
            }
          }
        >
           - Form Builder
        </Text>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#f3f3f3",
          "borderBottomWidth": 0,
          "borderColor": "rgb(205, 205, 205)",
          "borderTopWidth": 0,
          "flexDirection": "row",
          "paddingLeft": 16,
          "paddingRight": 16,
        }
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      />
      <View
        style={
          Object {
            "flexDirection": "row",
            "marginRight": 10,
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "borderColor": "rgba(255,255,255,0.3)",
                "borderRightWidth": 0,
                "marginRight": 0,
                "padding": 10,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "rgb(39, 39, 39)",
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 12,
                    },
                    undefined,
                    Object {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
               
              Save Form
               
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={300}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardSpace={0}
      onScroll={[Function]}
      resetKeyboardSpace={[Function]}
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={
        Object {
          "backgroundColor": "white",
          "flex": 1,
        }
      }
      tabLabel="Page 1"
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <View />
      </View>
    </RCTScrollView>
  </View>
  <View>
    <RCTScrollView
      horizontal={true}
      style={
        Object {
          "flexDirection": "row",
        }
      }
    >
      <View>
        <View
          style={
            Object {
              "borderRightColor": "rgba(0,0,0,0.1)",
              "borderRightWidth": 1,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "padding": 20,
                }
              }
            >
              <Text
                allowFontScaling={false}
                style={
                  Array [
                    Object {
                      "color": undefined,
                      "fontSize": 20,
                    },
                    Object {
                      "paddingRight": 5,
                    },
                    Object {
                      "fontFamily": "FontAwesome",
                      "fontStyle": "normal",
                      "fontWeight": "normal",
                    },
                    Object {},
                  ]
                }
              >
                
              </Text>
              <Text>
                Form Settings
              </Text>
            </View>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Page
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Header
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Text
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              QuickPick
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Date/Time
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Photo
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Text Block
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Signature
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Location
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Action
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Calc. Field
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Compare Dates
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Score
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              User Picker
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Group Picker
            </Text>
          </View>
        </View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <Text>
              Assign To
            </Text>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
